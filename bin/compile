#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e            # fail fast
set -o pipefail   # don't ignore exit codes when piping output
#set -x          # enable debugging

# Configure directories
build_dir=$1
cache_dir=$2

# Version
#varnish_version="1.5.10"
varnish_version="3.0.6"

compile_buildpack_dir=$(cd $(dirname $0); cd ..; pwd)
compile_buildpack_bin=$compile_buildpack_dir/bin

# Load some convenience functions like status(), echo(), and indent()
source $compile_buildpack_dir/bin/common.sh

compile_varnish_tgz="$compile_buildpack_dir/vendor/varnish-$varnish_version.tar.gz"
cd $build_dir

echo $build_dir
echo $cache_dir

status "Setting up varnish"
mkdir varnish
cd varnish
tar xzf $compile_varnish_tgz

status "Copying config files"
ls -l
#cd etc
#ls -l
#cd varnish
#ls -l
#cd ..
#ls -l
pwd

#cp -r $build_dir/etc/* /etc/varnish/

ls -l
#cat default.vcl
echo $compile_buildpack_bin
cd $compile_buildpack_bin
ls -l

exec $APP_ROOT/varnish/sbin/varnishd -n /home/vcap/tmp/varnish -F -f $APP_ROOT/varnish/etc/varnish/default.vcl -a 0.0.0.0:$VCAP_APP_PORT -t 120 -w 50,1000,120 -s malloc,$VARNISH_MEMORY_LIMIT -T 127.0.0.1:6082 -p http_resp_hdr_len=32768 2>&1


if [[ ! -f boot.sh ]]; then
    cp $compile_buildpack_bin/boot.sh .
fi
